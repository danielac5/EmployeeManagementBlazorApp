@page "/identity/account/register"
@using Client.Layout
@using Client.Pages.OtherPages
@using Syncfusion.Blazor.Popups
@inject SfDialogService DialogService
@layout AuthenticationLayout

<div class="container d-flex justify-content-center align-items-center" style="height: 100vh;">
    <div class="col-lg-4 col-md-6 col-sm-8">
        <EditForm Model="User" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <div class="card bg-dark" style="opacity:0.8; border-radius:10px; color:white; font-weight:bold;">
                <div class="card-header text-center fs-5">Register an account</div>
                <div class="card-body text-center">
                    <img style="border-radius:20px" src="../Images/CompanyLogo/lg.png" height="50" width="50" class="mb-3" />
                    <div class="form-group text-start">
                        <label class="form-label">Fullname</label>
                        <InputText @bind-Value="User.Fullname" class="form-control" style="width: 100%;"></InputText>
                    </div>

                    <div class="form-group text-start mt-3">
                        <label class="form-label">Email</label>
                        <InputText @bind-Value="User.Email" class="form-control" style="width: 100%;"></InputText>
                    </div>

                    <div class="form-group text-start mt-3">
                        <label class="form-label">Password</label>
                        <input type="password" @bind="User.Password" class="form-control" style="width: 100%;"/> 
                    </div>

                    <div class="form-group text-start mt-3">
                        <label class="form-label">Confirm password</label>
                        <input type="password" @bind="User.ConfirmPassword" class="form-control" style="width: 100%;"/> 
                    </div>
                    <div class="form-group mt-3">
                        @if (ShowLoadingButton)
                        {
                            <ButtonLoadingSpinner>

                            </ButtonLoadingSpinner>
                        }
                        else
                        {
                            <button class="btn btn-outline-primary w-100" type="submit">Register</button>
                        }
                    </div>
                </div>
                <div class="card-footer text-center">
                    <span>
                        Have an account already? |
                        <a class="btn-link" href="identity/account/login">Sign In</a>
                    </span>
                    <ValidationSummary />
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    public bool ShowLoadingButton { get; set; } = false;
    Register User = new();

    [CascadingParameter] public Task<AuthenticationState>? AuthenticationState { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }

    async Task HandleRegistration()
    {
        ShowLoadingButton = true;
        var result = await accountService.CreateAsync(User);
        if (result.Flag)
        {
            await DisplayDialog(result.Message, "Succes!");
            User = new();
        }
        else
        {
            await DisplayDialog(result.Message, "Eroare");
        }
        ShowLoadingButton = false;
    }

    private async Task DisplayDialog(string content, string title)
    {
        await DialogService.AlertAsync(content, title);
    }

    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState!).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (isUserAuthenticated)
            NavManager.NavigateTo("/home/dashboard");
    }
}
